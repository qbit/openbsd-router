---

- name: Install dependencies
  package:
    name: "{{ item }}"
    state: installed
  loop:
    - jq

- name: Set sysctl options
  sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    reload: yes
  loop: "{{ sysctl }}"

- name: Configure vlan hostname.if files
  template:
    src: hostname.vlan.j2
    dest: "/etc/hostname.{{ item.if_name }}"
    mode: 0640
    owner: root
    group: wheel
  loop: "{{ network }}"
  #when: item.type is defined and item.type is "vlan"
  notify: run netstart

- name: Configure physical hostname.if files
  template:
    src: hostname.vlan.j2
    dest: "/etc/hostname.{{ item.if_name }}"
    mode: 0640
    owner: root
    group: wheel
  loop: "{{ network }}"
  #when: item.type is defined and item.type is "physical"
  notify: run netstart

  #- name: Configure hostname.if files for vlans
  #template:
  #  src: hostname.parent.j2
  #  dest: "/etc/hostname.{{ item }}"
  #  mode: 0640
  #  owner: root
  #  group: wheel
  #loop: "{{ network | map(attribute='parent') | unique | sort | list }}"
  #notify: run netstart

- name: Flush handlers to activiate network
  meta: flush_handlers

- name: Configure dhcpd
  template:
    src: dhcpd.conf.j2
    dest: /etc/dhcpd.conf
    mode: 0644
    owner: root
    group: wheel
  notify: start and enable dhcpd

- name: update root-hints
  get_url:
    url: https://www.internic.net/domain/named.cache
    dest: /var/unbound/etc/named.cache
    owner: root
    group: _unbound
    mode: 0644
  tags:
    - unbound

- name: Configure unbound
  template:
    src: unbound.conf.j2
    dest: /var/unbound/etc/unbound.conf
    mode: 0640
    owner: root
    group: _unbound
    validate: /usr/sbin/unbound -v -c %s
  notify: restart and enable unbound
  tags:
    - unbound

#- name: Configure nsd
#  template:
#    src: nsd.conf.j2
#    dest: /var/nsd/etc/nsd.conf
#    mode: 0640
#    owner: root
#    group: _nsd
#    validate: /usr/sbin/nsd-checkconf -v %s
#  notify: start and enable nsd
#
## TODO: fix the serialization stuff so we don't regen every run
#- name: Configure master zone file
#  template:
#    src: zone.j2
#    dest: /var/nsd/zones/master/{{ domain }}
#    mode: 0640
#    owner: root
#    group: _nsd
#    validate: "/usr/sbin/nsd-checkzone {{ domain }} %s"
#  notify: restart nsd

- name: Create table list files
  copy:
    dest: "{{ item.file }}"
    content: "{{ item.list | join('\n') }}\n"
    owner: root
    group: wheel
    mode: 0600
  when: item.file is defined and item.list is defined
  loop: "{{ tables }}"
  tags:
    - pf.conf

- name: Create table population scripts
  template:
    src: fetch_list.sh.j2
    dest: "/root/update_pf_tables.sh"
    mode: 0700
    owner: root
    group: wheel
  tags:
    - pf.conf

- name: Create table population cron jobs
  cron:
    name: "PF table update script"
    special_time: hourly
    job: "/root/update_pf_tables.sh"

- name: Run update_pf_tables.sh
  command: /root/update_pf_tables.sh

- name: Configure authpf.conf
  when: use_authpf == True
  copy:
    dest: "/etc/authpf/authpf.conf"
    owner: root
    group: wheel
    content: ""
  tags:
    - pf.conf

- name: Configure authpf in login.conf
  when: use_authpf == True
  blockinfile:
    dest: "/etc/login.conf"
    owner: root
    group: wheel
    block: "{{ lookup('file', 'login.conf.authpf') }}"
  tags:
    - pf.conf

- name: Configure authpf motd
  when: use_authpf == True
  copy:
    dest: "/etc/motd.authpf"
    src: "motd.authpf"
    owner: root
    group: wheel
  tags:
    - pf.conf

- name: Configure pf.conf
  template:
    src: pf.conf.j2
    dest: /etc/pf.conf
    mode: 0600
    owner: root
    group: wheel
    validate: "/sbin/pfctl -vnf %s"
  notify: reload pf
  tags:
    - pf.conf
