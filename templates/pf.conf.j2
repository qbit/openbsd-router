#
# {{ ansible_managed }}
#

{% set vlan_list = [] %}
{% for net in network %}
{% if net.type == "vlan" %}
{{ vlan_list.append( net.if_name ) }}
# {{ net.if_name }}	{{ net.net }}	{{ net.name }}
{% endif %}
{% if net.static_ips is defined %}
{% for host in net.static_ips %}
{{ host.name | regex_replace('\.', '_') }} = "{{ host.address }}" # {{ host.ethernet }}
{% endfor %}
{% endif %}
{% endfor %}

ext_if = "{{ ansible_default_ipv4.device }}"
#vlans = "{ {{ vlan_list | join(', ') }} }"
vlan_nets = "{ {{ vlan_list | join(':network, ') }}:network }"

{% if pf_macros is defined %}
{% for m in pf_macros %}
{{ m.name }} = "{ {{ m.val | join(', ') }} }"
{% endfor %}
{% endif %}

table <firewall> const { self }
{% if tables is defined %}
{% for t in tables %}
table <{{ t.name }}>{% if t.persist is defined and t.persist == True %} persist {% endif %}{% if t.file is defined %} file "{{ t.file }}"{% endif %}

{% endfor %}
{% endif %}

{% if queues is defined %}
{% for q in queues %}
queue {{ q.name }} on {{ q.interface }} bandwidth {{ q.bandwidth }} max {{ q.max }}
{% for qq in q.queue %}
queue  {{ qq.name }} parent {{ q.name }} bandwidth {{ qq.bandwidth }} max {{ qq.max }} {% if qq.burst is defined %}burst {{ qq.burst }} {% endif %}{% if qq.default is defined and qq.default == True %}default{% endif %}

{% endfor %}

{% endfor %}
{% endif %}
icmp_types = "{echoreq unreach}"
icmp6_types = "{echoreq unreach timex paramprob}"

set skip on lo

# scrub incoming packets
match in all scrub (no-df)

# To see what is blocking, set "debug=True" and run
# tcpdump -nettipflog0
{% if debug == True %}
block log all
{% else %}
block all
{% endif %}

# activate spoofing protection for all interfaces
block in quick from urpf-failed

# Data from "rules"
{% for entry in rules %}
{{ entry }}
{% endfor %}

# Nat our stuffs
match out on $ext_if inet from $vlan_nets nat-to ($ext_if)

# Port forwarding example
#pass in on $ext_if inet proto tcp from any to ($ext_if) port ssh \
#	rdr-to 10.66.0.86 port ssh tag forwarding
#pass out proto tcp from any to 10.66.0.86 port ssh tagged forwarding

# Allow ICMP
pass inet proto icmp icmp-type $icmp_types
pass inet6 proto icmp6 icmp6-type $icmp6_types

# Allow DNS and NTP
pass quick proto {tcp, udp} from $vlan_nets to port {domain, ntp}

pass from <firewall>

{% for net in network %}
{% if net.type == "vlan" %}
# {{ net.if_name }} ({{ net.name }}) {{ net.net }}/{{ net.netmask }}
{% if net.pf_rules is defined %}
{% for rule in net.pf_rules %}
{{ rule }}
{% endfor %}
{% endif %}

{% endif %}
{% endfor %}

{% if debug %}
# We are working in debug mode, let in ssh from external
pass in on $ext_if proto tcp to port ssh
{% endif %}
# Allow OpenBSD boxes to connect via ssh
pass in on $vlan_nets proto tcp from any os OpenBSD to port ssh

pass out on egress proto { tcp udp icmp } all modulate state
